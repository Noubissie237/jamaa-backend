type Account {
  id: ID!
  userId: ID!
  accountNumber: String!
  balance: String!
  createdAt: String!
}

input CustomerInput {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  cniRecto: String!
  cniVerso: String!
  cniNumber: String!
}


type Mutation {
    createAccount(customer: CustomerInput!): Account
    incrementBalance(accountId: ID!, amount: Float!): Account
    decrementBalance(accountId: ID!, amount: Float!): Account
}

type Query {
    getAllAccounts: [Account!]
    getAccount(id: ID!): Account
}